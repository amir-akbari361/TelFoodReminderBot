This workflow automates updating the university food menu
name: Update University Food Menu

on:

Allows you to run this workflow manually from the Actions tab
workflow_dispatch:

Runs the workflow on a schedule
schedule:
# At 04:00 UTC on Saturday (corresponds to Saturday morning in Iran)
# You can adjust the timing as needed
- cron: '0 4 * * 6'

jobs:
scrape_and_commit:
runs-on: ubuntu-latest

steps:
  # Step 1: Checks out your repository's code
  - name: Checkout repository
    uses: actions/checkout@v4

  # Step 2: Sets up Python environment
  - name: Set up Python
    uses: actions/setup-python@v4
    with:
      python-version: '3.9'

  # Step 3: Installs required Python libraries
  - name: Install dependencies
    run: |
      python -m pip install --upgrade pip
      pip install requests beautifulsoup4

  # Step 4: Runs the scraper script to download the menu files
  - name: Run scraper to update menu files
    env:
      # These secrets are securely passed to the script
      UNIVERSITY_USERNAME: ${{ secrets.UNIVERSITY_USERNAME }}
      UNIVERSITY_PASSWORD: ${{ secrets.UNIVERSITY_PASSWORD }}
    run: python scraper.py

  # Step 5: Commits and pushes the updated menu files to your repository
  - name: Commit and push if there are changes
    run: |
      # Configure git user for the commit
      git config --global user.name "GitHub Actions Bot"
      git config --global user.email "github-actions[bot]@users.noreply.github.com"
      
      # Add all changed files in the 'layouts' directory
      git add layouts/*.html
      
      # Check if there are any staged changes. If so, commit and push.
      # This prevents empty commits if the menu hasn't changed.
      if ! git diff --staged --quiet; then
        git commit -m "chore(bot): Update weekly food menus"
        git push
      else
        echo "No changes to the menu files."
      fi
